CREATE OR REPLACE PROCEDURE TEAM_NULLPOINT.proc_admin_member(     
   FIELD IN varchar2,
   master_id IN varchar2, 
   user_id IN varchar2,
   masterCsr OUT SYS_REFCURSOR -- 커서로 반환
)
IS
    cnt number;
    memCnt number;
    memCheck number;
    chefCheck number;
    masterChecker varchar2(100);
    e_no_master EXCEPTION;
BEGIN  
    
    SELECT count(*) INTO cnt FROM master_user WHERE m_id = master_id;   --관리자인지 체크
    
    IF(cnt>0) THEN
        SELECT master_groupid INTO masterChecker FROM master_user WHERE m_id = master_id; --무슨 관리자인지 체크
    
        IF(masterChecker IN('MG1','MG2','MG3','MG4')) THEN      --무슨 권한을 가지고있나?
    
            IF(masterChecker IN('MG1','MG4')) THEN  --총관리자 or 회원관리자
            
                 IF(field IN('MEM_LIST')) THEN  --멤버 리스트 보기
                 
                    -- 회원, 블랙리스트 조인
                    OPEN masterCsr FOR
                        SELECT m_id,m_nick,m_zip,m_hp,m_name,m_day, DECODE(m_gender,0,'남자',1,'여자') m_gender,m_birth,m_mail,
                                DECODE(chef_apply,0,'회원',1,'셰프신청',2,'셰프') chef_apply, NVL(checkblist,0) checkblist, NVL(report,0) report
                        FROM (SELECT m.m_id,m.m_nick,m.m_zip,m.m_hp,m.m_name,m.m_day,m.m_gender,m.m_birth,m.m_mail,m.chef_apply, bl.checkblist,bl.report
                                FROM member m INNER JOIN blist bl on m.m_id = bl.m_id(+));
            
                 ELSIF(field IN('BLACK_LIST')) THEN     --블랙리스트 회원 보기
            
                    OPEN masterCsr FOR
                        SELECT * FROM member m INNER JOIN blist bl on m.m_id = bl.m_id WHERE checkblist =2; --블랙리스트 = 2
                    
                 ELSIF(field IN('PAUSE_MEM_LIST')) THEN    --일시정지 회원 보기
                 
                    OPEN masterCsr FOR
                        SELECT * FROM member m INNER JOIN blist bl on m.m_id = bl.m_id WHERE checkblist =1; --일시정지리스트 = 1
                    
                 ELSIF(field IN('PUT_BLACK')) THEN  --블랙리스트 추가하기
                 
                    SELECT count(*) INTO memCnt FROM member WHERE m_id=user_id;
                    
                    IF(memCnt>0) THEN
                        SELECT count(*) INTO memCheck FROM blist WHERE m_id = user_id AND checkblist=2;
                    
                        IF(memCheck>0) THEN
                        
                            OPEN masterCsr FOR
                                SELECT '이미 블랙리스트인 회원입니다' msg FROM dual;
                            
                        ELSE
                            SELECT count(*) INTO memCheck FROM blist WHERE m_id = user_id;  -- blist 테이블에 등록되어있는지 여부체크
                            
                            IF(memCheck>0) THEN
                            
                                UPDATE BLIST
                                SET checkblist = 2
                                WHERE m_id=user_id;
                                
                            ELSE
                            
                                INSERT INTO blist VALUES(user_id,2,999);
                            
                            END IF;
                            
                            OPEN masterCsr FOR
                                SELECT '해당 회원을 블랙리스트 처리하였습니다' msg FROM dual;
                            
                        END IF;
                        
                    ELSE
                        OPEN masterCsr FOR
                            SELECT '등록된 회원을 입력하여 주세요' msg FROM dual;
                    
                    END IF;
                 
                    
                    
                 ELSIF(field IN('PUT_PAUSE')) THEN --일시정지 등록하기
                 
                    SELECT count(*) INTO memCnt FROM member WHERE m_id=user_id;
                    
                    IF(memCnt>0) THEN
                        SELECT count(*) INTO memCheck FROM blist WHERE m_id = user_id AND checkblist=1;
                    
                        IF(memCheck>0) THEN
                        
                            OPEN masterCsr FOR
                                SELECT '이미 일시정지된 회원입니다' msg FROM dual;
                            
                        ELSE
                            SELECT count(*) INTO memCheck FROM blist WHERE m_id = user_id;  -- blist 테이블에 등록되어있는지 여부체크
                            
                            IF(memCheck>0) THEN
                            
                                UPDATE BLIST
                                SET checkblist = 1
                                WHERE m_id=user_id;
                                
                            ELSE
                            
                                INSERT INTO blist VALUES(user_id,1,99);
                            
                            END IF;
                            
                            OPEN masterCsr FOR
                                SELECT '해당 회원을 일시정지 처리 하였습니다' msg FROM dual;
                            
                        END IF;
                    ELSE
                        OPEN masterCsr FOR
                            SELECT '등록된 회원을 입력하여 주세요' msg FROM dual;
                        
                    END IF;
                 
                    
                    
                 ELSIF(field IN('RELEASE_PAUSE_MEM')) THEN  --일시정지 풀어주기
                 
                 
                    SELECT count(*) INTO memCnt FROM member WHERE m_id=user_id;

                    IF(memCnt>0) THEN
                    
                        SELECT count(*) INTO memCheck FROM blist WHERE m_id = user_id AND checkblist=1;
                        
                        IF(memCheck>0) THEN
                        
                            UPDATE blist
                            SET checkblist=0,
                                report=0
                            WHERE m_id=user_id;
                            
                            OPEN masterCsr FOR
                                SELECT '해당 회원의 일시정지 상태를 해제하였습니다' msg FROM dual;
                            
                        ELSE
                        
                            OPEN masterCsr FOR
                            SELECT '일시정지 상태인 회원만 수정가능합니다' msg FROM dual;
                        
                        END IF;
                    
                    ELSE
                        OPEN masterCsr FOR
                            SELECT '등록된 회원을 입력하여 주세요' msg FROM dual;
                    
                    END IF;
                 
                 
                    
                 
                 
                 ELSIF(field IN('READ_WRITTING')) THEN
                 
                    SELECT count(*) INTO memCheck FROM chef_register WHERE m_id=user_id;
                    
                    IF(memCheck >0) THEN
                       
                       OPEN masterCsr FOR
                            SELECT m_id, main_food, writting FROM chef_register WHERE m_id = user_id;   --셰프 양식서 보기
                    
                    ELSE
                    
                        OPEN masterCsr FOR
                            SELECT '등록된 양식서가 없습니다' msg FROM dual;
                        
                    END IF;
                 
                 ELSIF(field IN('COMMIT_CHEF')) THEN
                 
                    SELECT chef_apply INTO chefCheck FROM member WHERE m_id=user_id;
                    
                    IF(chefCheck=1) THEN
                    
                        UPDATE member
                        SET chef_apply = 2
                        WHERE m_id=user_id;
                        
                        DELETE FROM chef_register WHERE m_id=user_id;
                        
                        OPEN masterCsr FOR
                            SELECT '셰프로 등록 시켰습니다' msg FROM dual;
                        
                    ELSE
                        OPEN masterCsr FOR
                            SELECT '양식서를 제출한 회원이 아니거나 이미 셰프로 등록된 회원입니다' msg FROM dual;
                    
                    END IF;
                 
                 
                 END IF;
            
            commit; --멤버 쪽 관리      
            
            END IF;
        
        END IF;
    
    ELSE
        raise e_no_master;
    
    END IF;
    
      

EXCEPTION
    WHEN e_no_master THEN
        OPEN masterCsr FOR
            SELECT '권한이 없습니다' msg
              FROM dual;
        rollback;
       
END;
/
