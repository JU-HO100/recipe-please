#log4j.properties
log4j.rootCategory=info, stdout, file
log4j.debug=false
#com.p6spy.engine.logging.P6LogFactory
#com.p6spy.engine.spy.appender.StdoutLogger
#log4j.appender.stdout=com.p6spy.engine.logging.appender.StdoutLogger
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.ImmediateFlush=true
log4j.appender.stdout.Target=System.err

log4j.appender.stdout.layout.ConversionPattern=[%d] [%p] (%13F:%L) %3x - %m%n


log4j.appender.file.DatePattern = '.'yyyy-MM-dd
log4j.logger.np.com.mybatis.MemberMapper = Trace
log4j.logger.np.com.mybatis.AdMemberMapper = Trace
#emp.xml 이나 empt.xml 에 있는 namespace 이름을 등록한다.
#MyBatis(ORM) 를 활용하여 CRUD(S/I/U/D) 를 작성할 수 있다
# xml분석하기
#↓namespace
#log4j.logger.oracle.mybatis2.ZipcodeMapper = Trace
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d] [%p] (%13F:%L) %3x - %m%n

log4j.logger.java.sql.Connection=INFO
log4j.logger.java.sql.Statement=INFO
log4j.logger.java.sql.PreparedStatement=INFO
log4j.logger.java.sql.ResultSet=INFO