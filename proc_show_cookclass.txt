CREATE OR REPLACE PROCEDURE TEAM_NULLPOINT.proc_show_cookclass
(
user_id IN varchar2
,csr OUT sys_refcursor
)
IS
    v_classcd number;
    secCnt number;
    cnt number;
    e_need_login EXCEPTION;
BEGIN
    SELECT count(*) INTO cnt FROM member WHERE m_id=user_id;
    


    IF(cnt>0) THEN  
    
        --쿠킹클래스 리스트가 열렸을때 현재시간보다 지난것이 있다면 쿠킹클래스 자동으로 삭제처리해주기
        SELECT count(*) INTO secCnt FROM cooking_class WHERE c_date<to_char(sysdate,'YYYY-MM-DD HH:MI');
        
        IF(secCnt>0) THEN
            SELECT c_classcd INTO v_classcd FROM cooking_class WHERE c_date<to_char(sysdate,'YYYY-MM-DD HH:MI');
            
            DELETE FROM cooking_class WHERE c_classcd = v_classcd;
            
            DELETE FROM cooking_register WHERE c_classcd = v_classcd;
            commit;
        END IF;
        
        OPEN csr FOR
            SELECT a.c_classcd, a.c_cook, a.c_ingredients, a.c_zip,a.c_zipdetail, a.cnt as nowpersons, a.c_member as maxpersons, a.c_date, a.m_id, m.m_nick, a.rgreport
            FROM(
                SELECT cc.c_classcd, cc.c_cook, cc.c_ingredients, cc.c_zip,cc.c_zipdetail, nowPersons.cnt,cc.c_member, cc.c_date, chefClass.m_id, decode(chefClass.rgreport,3,'셰프') rgreport
                FROM cooking_class cc INNER JOIN
                    (SELECT m_id, c_classcd, rgreport FROM cooking_register where rgreport=3) chefClass
                ON CC.C_CLASSCD = chefClass.c_classcd
                INNER JOIN
                    (SELECT c_classcd,count(*) cnt FROM cooking_register group by c_classcd) nowPersons
                ON cc.c_classcd = nowPersons.c_classcd
                ORDER BY cc.c_classcd) a
            INNER JOIN member m
            ON m.m_id = a.m_id;

    ELSE
        raise e_need_login;
    END IF;
        

    EXCEPTION
       WHEN e_need_login THEN
            OPEN csr FOR
            SELECT '로그인 전용 페이지 입니다' msg FROM dual;
            
            return;
            
END;
/
